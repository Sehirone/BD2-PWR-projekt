----------------------------------------------------------------------------
--usuniecie wszystkich tabel
DROP TABLE ZAWARTOSC_DOSTAW CASCADE CONSTRAINTS;
DROP TABLE DOSTAWCY CASCADE CONSTRAINTS;
DROP TABLE DOSTAWY CASCADE CONSTRAINTS;
DROP TABLE PRODUKTY CASCADE CONSTRAINTS;                                            
DROP TABLE SPRZEDANE_RZECZY CASCADE CONSTRAINTS;
DROP TABLE SPRZEDAZE CASCADE CONSTRAINTS;
DROP TABLE PRACOWNICY CASCADE CONSTRAINTS;
DROP TABLE STANOWISKA CASCADE CONSTRAINTS;
DROP TABLE GRAFIKI CASCADE CONSTRAINTS;
DROP TABLE GODZINY_DO_GRAFIKU CASCADE CONSTRAINTS;

DROP SEQUENCE pracownicy_seq;
DROP SEQUENCE dostawcy_seq;
DROP SEQUENCE zawartosc_dostaw_seq;
DROP SEQUENCE dostawy_seq;
DROP SEQUENCE produkty_seq;
DROP SEQUENCE sprzedane_rzeczy_seq;
DROP SEQUENCE grafiki_seq;
DROP SEQUENCE godziny_do_grafiku_seq;
DROP SEQUENCE sprzedaze_seq;
 
----------------------------------------------------------------------------
--Tworzenie tabeli stanowiska
CREATE TABLE STANOWISKA
(    
        JOB_ID VARCHAR2(10) PRIMARY KEY NOT NULL,
        JOB_TITLE VARCHAR2(30) NOT NULL,
        MIN_SALARY NUMBER(6),
        MAX_SALARY NUMBER(6),
	PRIVILAGE_LEVEL NUMBER(1)
)TABLESPACE "USERS" ;
 
   COMMENT ON COLUMN "STANOWISKA"."JOB_ID" IS 'Primary key of STANOWISKA table.';
   COMMENT ON COLUMN "STANOWISKA"."JOB_TITLE" IS 'A not null column that shows job title, e.g. PRACOWNIK , KIEROWNIK';
   COMMENT ON COLUMN "STANOWISKA"."MIN_SALARY" IS 'Minimum salary for a job title.';
   COMMENT ON COLUMN "STANOWISKA"."MAX_SALARY" IS 'Maximum salary for a job title';
   COMMENT ON COLUMN "STANOWISKA"."PRIVILAGE_LEVEL" IS 'Privilage level for ShopApp';
 
----------------------------------------------------------------------------
--Tworzenie tabeli pracownicy
 
CREATE TABLE PRACOWNICY
(    
        EMPLOYEE_ID NUMBER(3) PRIMARY KEY NOT NULL,
        JOB_ID VARCHAR2(10) REFERENCES STANOWISKA(JOB_ID),
        FIRST_NAME VARCHAR2(20) NOT NULL,
        LAST_NAME VARCHAR2(20) NOT NULL,  
        HIRE_DATE DATE NOT NULL,
        SALARY NUMBER(6) NOT NULL CHECK (SALARY >0),
	PASSWORD VARCHAR2(20) NOT NULL
)TABLESPACE "USERS" ;
 
   COMMENT ON COLUMN "PRACOWNICY"."EMPLOYEE_ID" IS 'Primary key of employees table.';
   COMMENT ON COLUMN "PRACOWNICY"."JOB_ID" IS 'Current job of the employee; foreign key to job_id column of the STANOWISKA table. A not null column.';
   COMMENT ON COLUMN "PRACOWNICY"."FIRST_NAME" IS 'First name of the employee. A not null column.';
   COMMENT ON COLUMN "PRACOWNICY"."LAST_NAME" IS 'Last name of the employee. A not null column.';
   COMMENT ON COLUMN "PRACOWNICY"."HIRE_DATE" IS 'Date when the employee started on this job. A not null column.';
   COMMENT ON COLUMN "PRACOWNICY"."SALARY" IS 'Monthly salary of the employee. Must be greater than zero';
   COMMENT ON COLUMN "PRACOWNICY"."PASSWORD" IS 'Password for ShopApp';

   CREATE SEQUENCE pracownicy_seq START WITH 1;

   CREATE OR REPLACE TRIGGER pracownicy_bir 
   BEFORE INSERT ON pracownicy
   FOR EACH ROW

   BEGIN
      SELECT pracownicy_seq.NEXTVAL
      INTO   :new.employee_id
      FROM   dual;
   END;
   /
 
----------------------------------------------------------------------
-- Tworzenie tabeli SPRZEDAZE
  
CREATE TABLE SPRZEDAZE
(    
        SALE_ID NUMBER(6) PRIMARY KEY NOT NULL,
        EMPLOYEE_ID NUMBER(3) REFERENCES PRACOWNICY(EMPLOYEE_ID),
        SALE_PRICE NUMBER(8,2) NOT NULL,
        SALE_DATE DATE default sysdate not null
)TABLESPACE "USERS" ;
 
   COMMENT ON COLUMN "SPRZEDAZE"."SALE_ID" IS 'Primary key of SPRZEDA¯E table.';
   COMMENT ON COLUMN "SPRZEDAZE"."EMPLOYEE_ID" IS 'A foreign key referencing the employee_id column of the PRACOWNICY table';
   COMMENT ON COLUMN "SPRZEDAZE"."SALE_PRICE" IS 'Price for sale.';
   COMMENT ON COLUMN "SPRZEDAZE"."SALE_DATE" IS 'the day when it was sold';

   CREATE SEQUENCE sprzedaze_seq START WITH 1;

   CREATE OR REPLACE TRIGGER sprzedaze_bir 
   BEFORE INSERT ON sprzedaze
   FOR EACH ROW

   BEGIN
      SELECT sprzedaze_seq.NEXTVAL
      INTO   :new.sale_id
      FROM   dual;
   END;
   /

----------------------------------------------------------------------
-- Tworzenie tabeli PRODUKTY
 
CREATE TABLE PRODUKTY
(    
        PRODUCT_ID NUMBER(5) PRIMARY KEY NOT NULL,
        PRODUCT_NAME VARCHAR2(10) ,
        BARCODE VARCHAR2(13) NOT NULL,
        PRICE NUMBER(8,2),
        PRICE_CUT NUMBER(3,2) DEFAULT '1' CHECK (PRICE_CUT > 0 AND PRICE_CUT <= 1),
        QUANTITY NUMBER(6) NOT NULL
)TABLESPACE "USERS" ;
   
   COMMENT ON COLUMN "PRODUKTY"."PRODUCT_ID" IS 'Primary key of PRODUKTY table.';
   COMMENT ON COLUMN "PRODUKTY"."PRODUCT_NAME" IS 'A name of product';
   COMMENT ON COLUMN "PRODUKTY"."BARCODE" IS 'Barcode of the product, represented in hexadecimal.';
   COMMENT ON COLUMN "PRODUKTY"."PRICE" IS 'The price of the product';
   COMMENT ON COLUMN "PRODUKTY"."PRICE_CUT" IS 'Multiplier of the product price, eg. a 0.9 multiplier is equal to a 10% price reduction. Is not null';
   COMMENT ON COLUMN "PRODUKTY"."QUANTITY" IS 'The quantity of products in stock. Is not null';

   CREATE SEQUENCE produkty_seq START WITH 1;

   CREATE OR REPLACE TRIGGER produkty_bir 
   BEFORE INSERT ON produkty
   FOR EACH ROW

   BEGIN
      SELECT produkty_seq.NEXTVAL
      INTO   :new.product_id
      FROM   dual;
   END;
   /
   
----------------------------------------------------------------------
-- Tworzenie tabeli SPRZEDANE_RZECZY
 
CREATE TABLE SPRZEDANE_RZECZY
(    
        SALEITEMS_ID NUMBER(6) PRIMARY KEY NOT NULL,
        SALE_ID NUMBER(6) REFERENCES SPRZEDAZE(SALE_ID),
        PRODUCT_ID NUMBER(6) REFERENCES PRODUKTY(PRODUCT_ID),
        ITEM_QUANTITY NUMBER(5) NOT NULL
)TABLESPACE "USERS" ;
 
   COMMENT ON COLUMN "SPRZEDANE_RZECZY"."SALEITEMS_ID" IS 'Primary key of SPRZEDANE_RZECZY table.';
   COMMENT ON COLUMN "SPRZEDANE_RZECZY"."SALE_ID" IS 'Foreign key referecing SALE_ID in the SPRZEDA¯E table';
   COMMENT ON COLUMN "SPRZEDANE_RZECZY"."PRODUCT_ID" IS 'The type of product sold. Foreign key referencing product_id of the PRODUKTY table';
   COMMENT ON COLUMN "SPRZEDANE_RZECZY"."ITEM_QUANTITY" IS 'Number of the product in the transcation ';

   CREATE SEQUENCE sprzedane_rzeczy_seq START WITH 1;

   CREATE OR REPLACE TRIGGER sprzedane_rzeczy_bir 
   BEFORE INSERT ON sprzedane_rzeczy
   FOR EACH ROW

   BEGIN
      SELECT sprzedane_rzeczy_seq.NEXTVAL
      INTO   :new.saleitems_id
      FROM   dual;
   END;
   /

-- Trigger zmniejszajacy ilosc produktow na stanie o ilosc sprzedanego produktu
   CREATE OR REPLACE TRIGGER sprzedaz_zmniejsz_ilosc
   BEFORE INSERT ON SPRZEDANE_RZECZY
   FOR EACH ROW
   
   BEGIN
      UPDATE PRODUKTY
      SET PRODUKTY.QUANTITY = PRODUKTY.QUANTITY - :new.ITEM_QUANTITY
      WHERE PRODUKTY.PRODUCT_ID = :new.PRODUCT_ID;
   END;
   /
 
----------------------------------------------------------------------------
--Tworzenie tabeli dostawcy
CREATE TABLE DOSTAWCY
(    
        SUPPLIER_ID NUMBER(3) PRIMARY KEY NOT NULL,
        SUPPLIER_NAME VARCHAR2(20) NOT NULL,
        NUMBER_OF_SHIPMENTS NUMBER(6)
)TABLESPACE "USERS" ;
 
   COMMENT ON COLUMN "DOSTAWCY"."SUPPLIER_ID" IS 'Primary key of the DOSTAWCY table.';
   COMMENT ON COLUMN "DOSTAWCY"."SUPPLIER_NAME" IS 'Name of the supplier. A not null column.';
   COMMENT ON COLUMN "DOSTAWCY"."NUMBER_OF_SHIPMENTS" IS 'Number of shipments the supplier supplied.';

   CREATE SEQUENCE dostawcy_seq START WITH 1;

   CREATE OR REPLACE TRIGGER dostawcy_bir 
   BEFORE INSERT ON dostawcy
   FOR EACH ROW

   BEGIN
      SELECT dostawcy_seq.NEXTVAL
      INTO   :new.supplier_id
      FROM   dual;
   END;
   /
 
----------------------------------------------------------------------------
--Tworzenie tabeli dostawy
 
CREATE TABLE DOSTAWY
(    
        SHIPMENT_ID NUMBER(3) PRIMARY KEY NOT NULL,
        SHIPMENT_DATE DATE,
        SUPPLIER_ID NUMBER(6) REFERENCES DOSTAWCY(SUPPLIER_ID),
        EMPLOYEE_ID NUMBER(3) REFERENCES PRACOWNICY(EMPLOYEE_ID)
)TABLESPACE "USERS" ;
 
 
   COMMENT ON COLUMN "DOSTAWY"."SHIPMENT_ID" IS 'Primary key of the DOSTAWY table.';
   COMMENT ON COLUMN "DOSTAWY"."SHIPMENT_DATE" IS 'Date of the shipment. A not null columnn.';
   COMMENT ON COLUMN "DOSTAWY"."SUPPLIER_ID" IS 'ID of the supplier supplying the shipment; foreign key to supplier_id column of the DOSTAWCY table. A not null column.';
   COMMENT ON COLUMN "DOSTAWY"."EMPLOYEE_ID" IS 'ID of the employee recieving the shipment; foreign key to employee_id column of the EMPLOYEES table. A not null column.';

   CREATE SEQUENCE dostawy_seq START WITH 1;

   CREATE OR REPLACE TRIGGER dostawy_bir 
   BEFORE INSERT ON dostawy
   FOR EACH ROW

   BEGIN
      SELECT dostawy_seq.NEXTVAL
      INTO   :new.shipment_id
      FROM   dual;
   END;
   /
 
----------------------------------------------------------------------------
--Tworzenie tabeli zawartosc dostaw
 
CREATE TABLE ZAWARTOSC_DOSTAW
(    
        SHIPMENTITEMS_ID NUMBER(6) PRIMARY KEY NOT NULL,
        SHIPMENT_ID NUMBER(6) REFERENCES DOSTAWY(SHIPMENT_ID),
        PRODUCT_ID NUMBER(6) REFERENCES PRODUKTY(PRODUCT_ID),
        PRODUCT_QUANTITY NUMBER(6) NOT NULL
)TABLESPACE "USERS" ;
 
   COMMENT ON COLUMN "ZAWARTOSC_DOSTAW"."SHIPMENTITEMS_ID" IS 'Primary key of the ZAWARTOSC_DOSTAW table.';
   COMMENT ON COLUMN "ZAWARTOSC_DOSTAW"."SHIPMENT_ID" IS 'ID of the shipment in which the products were shipped; foreign key to shipment_id column of the DOSTAWY table. A not null column.';
   COMMENT ON COLUMN "ZAWARTOSC_DOSTAW"."PRODUCT_ID" IS 'ID of the product contained in the shippment; foreign key to prodcutt_id column of the PRODUKTY table. A not null column.';
   COMMENT ON COLUMN "ZAWARTOSC_DOSTAW"."PRODUCT_QUANTITY" IS 'Quantity of the product contained in the shipment. A not null column.';

   CREATE SEQUENCE zawartosc_dostaw_seq START WITH 1;

   CREATE OR REPLACE TRIGGER zawartosc_dostaw_bir 
   BEFORE INSERT ON zawartosc_dostaw
   FOR EACH ROW

   BEGIN
      SELECT zawartosc_dostaw_seq.NEXTVAL
      INTO   :new.shipmentitems_id
      FROM   dual;
   END;
   /

----------------------------------------------------------------------------
--Tworzenie tabeli grafiki

CREATE TABLE GRAFIKI
(    
        ROTA_ID NUMBER(6) PRIMARY KEY NOT NULL,
        EMPLOYEE_ID NUMBER(3) REFERENCES PRACOWNICY(EMPLOYEE_ID)
)TABLESPACE "USERS" ;
 
   COMMENT ON COLUMN "GRAFIKI"."ROTA_ID" IS 'Primary key of the GRAFIKI table.';
   COMMENT ON COLUMN "GRAFIKI"."EMPLOYEE_ID" IS 'ID of the employee; foreign key to employee_id column of the EMPLOYEES table. A not null column.';

   CREATE SEQUENCE grafiki_seq START WITH 1;

   CREATE OR REPLACE TRIGGER grafiki_bir 
   BEFORE INSERT ON grafiki
   FOR EACH ROW

   BEGIN
      SELECT grafiki_seq.NEXTVAL
      INTO   :new.rota_id
      FROM   dual;
   END;
   /
 
----------------------------------------------------------------------------
--Tworzenie tabeli godziny do grafiku
 
CREATE TABLE GODZINY_DO_GRAFIKU
(    
        ROTA_HOURS_ID NUMBER(6) PRIMARY KEY NOT NULL,
        ROTA_ID NUMBER(6) REFERENCES GRAFIKI(ROTA_ID),
        DATE_TIME TIMESTAMP NOT NULL,
        HOURS NUMBER(2) NOT NULL
)TABLESPACE "USERS" ;
 
 
   COMMENT ON COLUMN "GODZINY_DO_GRAFIKU"."ROTA_HOURS_ID" IS 'Primary key of the GODZINNY_DO_GRAFIKU table.';
   COMMENT ON COLUMN "GODZINY_DO_GRAFIKU"."ROTA_ID" IS 'ID of the rota; foreign key to ROTA_ID column of the GRAFIKI table. A not null column.';
   COMMENT ON COLUMN "GODZINY_DO_GRAFIKU"."DATE_TIME" IS 'Date and time that shift starts. A not null column';
   COMMENT ON COLUMN "GODZINY_DO_GRAFIKU"."HOURS" IS 'Number of hours that employee is scheduled to work. A not null column';

  CREATE SEQUENCE godziny_do_grafiku_seq START WITH 1;

   CREATE OR REPLACE TRIGGER godziny_do_grafiku_bir 
   BEFORE INSERT ON godziny_do_grafiku
   FOR EACH ROW

   BEGIN
      SELECT godziny_do_grafiku_seq.NEXTVAL
      INTO   :new.rota_hours_id
      FROM   dual;
   END;
   /
 
---------------------------------STANOWISKA
INSERT INTO STANOWISKA (JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY,PRIVILAGE_LEVEL) VALUES ('Pra','Pracownik','1','10000','1');
INSERT INTO STANOWISKA (JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY,PRIVILAGE_LEVEL) VALUES ('Kie','Kierownik','1','10000','3');
INSERT INTO STANOWISKA (JOB_ID,JOB_TITLE,MIN_SALARY,MAX_SALARY,PRIVILAGE_LEVEL) VALUES ('Man','Manager','1','10000','2');
 
----------------------------------PRACOWNICY
INSERT INTO PRACOWNICY (JOB_ID,FIRST_NAME,LAST_NAME,HIRE_DATE,SALARY,PASSWORD) VALUES ('Pra','Jan','Kowalski','06-JAN-08','2500','12345');
INSERT INTO PRACOWNICY (JOB_ID,FIRST_NAME,LAST_NAME,HIRE_DATE,SALARY,PASSWORD) VALUES ('Pra','Jan','Nowak','06-JAN-10','2200','12345');
INSERT INTO PRACOWNICY (JOB_ID,FIRST_NAME,LAST_NAME,HIRE_DATE,SALARY,PASSWORD) VALUES ('Pra','Maciej','Wojcik','22-FEB-06','3000','12345');
INSERT INTO PRACOWNICY (JOB_ID,FIRST_NAME,LAST_NAME,HIRE_DATE,SALARY,PASSWORD) VALUES ('Kie','Przemyslaw','Nowakowski','1-DEC-01','4500','12345');
INSERT INTO PRACOWNICY (JOB_ID,FIRST_NAME,LAST_NAME,HIRE_DATE,SALARY,PASSWORD) VALUES ('Man','Zenon','Wisniewski','06-JAN-08','9500','12345');
 
------------ SPRZEDAZE
INSERT INTO SPRZEDAZE (EMPLOYEE_ID,SALE_PRICE) VALUES ('1','598.50');
INSERT INTO SPRZEDAZE (EMPLOYEE_ID,SALE_PRICE) VALUES ('2','255.40');
INSERT INTO SPRZEDAZE (EMPLOYEE_ID,SALE_PRICE) VALUES ('3','158');
INSERT INTO SPRZEDAZE (EMPLOYEE_ID,SALE_PRICE) VALUES ('1','560');
 
--------------------- PRODUKTY
INSERT INTO PRODUKTY (PRODUCT_NAME,BARCODE,PRICE,PRICE_CUT,QUANTITY) VALUES ('Maslo','5901111222227','3.5','1','11000');
INSERT INTO PRODUKTY (PRODUCT_NAME,BARCODE,PRICE,PRICE_CUT,QUANTITY) VALUES ('Mleko','5902222222227','2.1','1','1000');
INSERT INTO PRODUKTY (PRODUCT_NAME,BARCODE,PRICE,PRICE_CUT,QUANTITY) VALUES ('Chleb','5903333222227','2.5','1','150');
INSERT INTO PRODUKTY (PRODUCT_NAME,BARCODE,PRICE,PRICE_CUT,QUANTITY) VALUES ('Bulka','5904251222227','0.3','1','900');
INSERT INTO PRODUKTY (PRODUCT_NAME,BARCODE,PRICE,PRICE_CUT,QUANTITY) VALUES ('Woda','5905126333337','1.2','1','1100');
 
------------Sprzedane rzeczy
INSERT INTO SPRZEDANE_RZECZY (SALE_ID,PRODUCT_ID,ITEM_QUANTITY) VALUES ('1','1','105');
INSERT INTO SPRZEDANE_RZECZY (SALE_ID,PRODUCT_ID,ITEM_QUANTITY) VALUES ('1','2','110');
INSERT INTO SPRZEDANE_RZECZY (SALE_ID,PRODUCT_ID,ITEM_QUANTITY) VALUES ('2','1','50');
INSERT INTO SPRZEDANE_RZECZY (SALE_ID,PRODUCT_ID,ITEM_QUANTITY) VALUES ('2','5','67');
INSERT INTO SPRZEDANE_RZECZY (SALE_ID,PRODUCT_ID,ITEM_QUANTITY) VALUES ('3','4','110');
INSERT INTO SPRZEDANE_RZECZY (SALE_ID,PRODUCT_ID,ITEM_QUANTITY) VALUES ('3','3','50');
INSERT INTO SPRZEDANE_RZECZY (SALE_ID,PRODUCT_ID,ITEM_QUANTITY) VALUES ('4','2','100');
INSERT INTO SPRZEDANE_RZECZY (SALE_ID,PRODUCT_ID,ITEM_QUANTITY) VALUES ('4','1','100');
 
-------------------------------DOSTAWCY
INSERT INTO DOSTAWCY (SUPPLIER_NAME,NUMBER_OF_SHIPMENTS) VALUES ('Targpiast','4');
INSERT INTO DOSTAWCY (SUPPLIER_NAME,NUMBER_OF_SHIPMENTS) VALUES ('Biovert','2');
INSERT INTO DOSTAWCY (SUPPLIER_NAME,NUMBER_OF_SHIPMENTS) VALUES ('Dia-Cel','2');
 
---------------------------DOSTAWY
INSERT INTO DOSTAWY (SHIPMENT_DATE,SUPPLIER_ID,EMPLOYEE_ID) VALUES ('05-JAN-17','2','4');
INSERT INTO DOSTAWY (SHIPMENT_DATE,SUPPLIER_ID,EMPLOYEE_ID) VALUES ('10-FEB-18','1','3');
INSERT INTO DOSTAWY (SHIPMENT_DATE,SUPPLIER_ID,EMPLOYEE_ID) VALUES ('07-JAN-18','1','2');
INSERT INTO DOSTAWY (SHIPMENT_DATE,SUPPLIER_ID,EMPLOYEE_ID) VALUES ('10-FEB-17','1','2');
INSERT INTO DOSTAWY (SHIPMENT_DATE,SUPPLIER_ID,EMPLOYEE_ID) VALUES ('13-FEB-18','2','3');
INSERT INTO DOSTAWY (SHIPMENT_DATE,SUPPLIER_ID,EMPLOYEE_ID) VALUES ('19-FEB-18','3','3');
INSERT INTO DOSTAWY (SHIPMENT_DATE,SUPPLIER_ID,EMPLOYEE_ID) VALUES ('04-DEC-17','3','1');
INSERT INTO DOSTAWY (SHIPMENT_DATE,SUPPLIER_ID,EMPLOYEE_ID) VALUES ('03-FEB-17','1','3');
 
--------------------- ZAWARTOSC_DOSTAW -------------
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('1','1','100');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('1','2','1000');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('2','1','1000');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('2','3','100');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('3','4','10');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('4','1','10000');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('4','5','100');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('5','4','1000');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('6','5','1000');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('7','2','100');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('7','3','100');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('8','1','105');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('8','2','110');
INSERT INTO ZAWARTOSC_DOSTAW (SHIPMENT_ID,PRODUCT_ID,PRODUCT_QUANTITY) VALUES ('1','5','67');
 
----------------------------GRAFIKI
INSERT INTO GRAFIKI (EMPLOYEE_ID) VALUES ('1');
INSERT INTO GRAFIKI (EMPLOYEE_ID) VALUES ('2');
INSERT INTO GRAFIKI (EMPLOYEE_ID) VALUES ('3');
INSERT INTO GRAFIKI (EMPLOYEE_ID) VALUES ('4');
INSERT INTO GRAFIKI (EMPLOYEE_ID) VALUES ('5');
 
----------------------------GODZINY_DO_GRAFIKU
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('1','13-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('1','14-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('1','15-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('1','16-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('1','17-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('2','13-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('2','14-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('2','15-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('2','16-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('2','17-DEC-19 08:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('3','13-DEC-19 16:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('3','14-DEC-19 16:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('3','15-DEC-19 16:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('3','16-DEC-19 16:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('3','17-DEC-19 16:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('4','13-DEC-19 16:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('4','14-DEC-19 16:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('4','15-DEC-19 16:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('4','16-DEC-19 16:00:00.','8');
INSERT INTO GODZINY_DO_GRAFIKU (ROTA_ID,DATE_TIME,HOURS) VALUES ('4','17-DEC-19 16:00:00.','8');
 
/
UPDATE PRACOWNICY SET salary = 3333 WHERE EMPLOYEE_ID = 1;
UPDATE PRACOWNICY SET salary = 1234 WHERE EMPLOYEE_ID = 3;